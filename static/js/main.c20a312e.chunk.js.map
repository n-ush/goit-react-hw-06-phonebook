{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","redux/actions.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","redux/reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","payload","name","number","id","shortid","generate","deleteContact","changeFilter","ContactForm","state","nameInputId","numberInputId","handleInputChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","className","styles","form","htmlFor","type","pattern","title","required","onChange","input","btn","Component","connect","dispatch","actions","getFilteredContacts","allContacts","filter","normalizedFilter","toLowerCase","contact","includes","contacts","items","onDelete","list","map","list_item","onClick","e","target","App","createReducer","_","combineReducers","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","console","log","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.c20a312e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1-8Jw\",\"list_item\":\"ContactList_list_item__2iDpG\",\"contact\":\"ContactList_contact__2WWtZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__2_pIw\"};","import shortid from \"shortid\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst addContact = createAction(\"contacts/add\", ({ name, number }) => {\r\n  return {\r\n    payload: {\r\n      name: name,\r\n      number: number,\r\n      id: shortid.generate(),\r\n    },\r\n  };\r\n});\r\n\r\nconst deleteContact = createAction(\"contacts/delete\");\r\n\r\nconst changeFilter = createAction(\"contacts/changeFilter\");\r\n\r\nexport default { addContact, deleteContact, changeFilter };\r\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport shortid from \"shortid\";\nimport styles from \"./ContactForm.module.css\";\nimport actions from \"../../redux/actions\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  nameInputId = shortid.generate();\n  numberInputId = shortid.generate();\n\n  handleInputChange = (event) => {\n    const { name, value } = event.currentTarget;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    //console.log(this.state);\n\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} className={styles.form}>\n        <label htmlFor={this.nameInputId}>Name</label>\n        <input\n          value={this.state.name}\n          type=\"text\"\n          name=\"name\"\n          id={this.nameInputId}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={this.handleInputChange}\n          className={styles.input}\n        />\n\n        <label htmlFor={this.numberInputId}>Number</label>\n        <input\n          value={this.state.number}\n          id={this.numberInputId}\n          onChange={this.handleInputChange}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          className={styles.input}\n        />\n\n        <button type=\"submit\" className={styles.btn}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (name, number) => dispatch(actions.addContact(name, number)),\n});\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport styles from \"./ContactList.module.css\";\nimport PropTypes from \"prop-types\";\nimport actions from \"../../redux/actions\";\n\nconst ContactList = ({ contacts, onDelete }) => (\n  <ul className={styles.list}>\n    {contacts.map(({ id, name, number }) => (\n      <li key={id} className={styles.list_item}>\n        <div className={styles.contact}>\n          <p>{name}:</p>\n          <p>{number}</p>\n        </div>\n        <button onClick={() => onDelete(id)}>Delete</button>\n      </li>\n    ))}\n  </ul>\n);\n\nconst getFilteredContacts = (allContacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n\n  return allContacts.filter((contact) =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n};\n\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\n  contacts: getFilteredContacts(items, filter),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDelete: (id) => dispatch(actions.deleteContact(id)),\n});\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from \"react\";\nimport styles from \"./Filter.module.css\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport actions from \"../../redux/actions\";\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label>\n      Find contacts by name\n      <input\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n        className={styles.input}\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChange: (e) => dispatch(actions.changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React, { Component } from \"react\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm />\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport actions from \"./actions\";\r\n\r\nconst items = createReducer(\r\n  [\r\n    { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n    { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n    { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n    { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n  ],\r\n  {\r\n    [actions.addContact]: (state, { payload }) => [...state, payload],\r\n    [actions.deleteContact]: (state, { payload }) =>\r\n      state.filter(({ id }) => id !== payload),\r\n  }\r\n);\r\n\r\nconst filter = createReducer(\"\", {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({ items, filter });\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport contactsReducer from \"./reducer\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\n\r\nconst contactsPersistConfig = {\r\n  key: \"contacts\",\r\n  storage,\r\n  blacklist: [\"filter\"],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n  },\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport styles from \"./styles.css\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nconsole.log(store);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={<h1>Loading...</h1>} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1BSE3\",\"input\":\"ContactForm_input__3RibT\",\"label\":\"ContactForm_label__1AMC_\"};"],"sourceRoot":""}